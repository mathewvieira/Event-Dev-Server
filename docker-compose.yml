services:
  app:
    build:
      context: .
      target: final-prod
    container_name: event_prod_backend
    profiles: ["prod"]
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "${NODE_PORT}:${NODE_PORT}"
    environment:
      - DATABASE_URL="postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public"
      - REDIS_HOST=redis # Adicionado para conectar ao Redis
      - REDIS_PORT=6379  # Adicionado para conectar ao Redis
      - NODE_PORT=${NODE_PORT}
      - NODE_ENV=production
    command: sh -c "npx prisma migrate deploy && node dist/src/main.js"
    depends_on:
      migrate:
        condition: service_completed_successfully
    networks:
      - my-network

  db:
    image: postgres:15-alpine
    container_name: postgres_db
    env_file:
      - .env
    restart: always
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    build:
      context: .
      target: runner
    container_name: event_prod_migrate
    profiles: ["prod"] # Garante que só rode em produção
    env_file:
      - .env
    environment:
      - DATABASE_URL="postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public"
    command: sh -c "npx prisma migrate deploy"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - my-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_gui
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - my-network

  supertokens:
    image: supertokens.io/supertokens/supertokens-postgresql
    restart: unless-stopped
    ports:
      - "3567:3567"
    environment:
      - POSTGRESQL_CONNECTION_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      migrate:
        condition: service_completed_successfully
    networks:
      - my-network

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    restart: always
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - my-network

volumes:
  postgres_data:
  redis_data:

networks:
  my-network:
    driver: bridge
